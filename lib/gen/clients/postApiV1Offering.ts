/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  PostApiV1OfferingMutationRequest,
  PostApiV1OfferingMutationResponse,
  PostApiV1Offering400,
  PostApiV1Offering500,
} from '../types/PostApiV1Offering.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getPostApiV1OfferingUrl() {
  const res = { method: 'POST', url: `/tdsc/api/v1/offering` as const }
  return res
}

/**
 * @description 创建一个新的 Offering 并上传文件到 MinIO
 * @summary 创建 Offering（上传文件）
 * {@link /api/v1/offering}
 */
export async function postApiV1Offering(
  data: PostApiV1OfferingMutationRequest,
  config: Partial<RequestConfig<PostApiV1OfferingMutationRequest>> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const requestData = data
  const formData = new FormData()
  if (requestData) {
    Object.keys(requestData).forEach((key) => {
      const value = requestData[key as keyof typeof requestData]
      if (typeof value === 'string' || (value as unknown) instanceof Blob) {
        formData.append(key, value as unknown as string | Blob)
      }
    })
  }
  const res = await request<
    PostApiV1OfferingMutationResponse,
    ResponseErrorConfig<PostApiV1Offering400 | PostApiV1Offering500>,
    PostApiV1OfferingMutationRequest
  >({
    method: 'POST',
    url: getPostApiV1OfferingUrl().url.toString(),
    data: formData,
    ...requestConfig,
    headers: { 'Content-Type': 'multipart/form-data', ...requestConfig.headers },
  })
  return res.data
}