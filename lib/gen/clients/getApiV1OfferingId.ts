/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  GetApiV1OfferingIdQueryResponse,
  GetApiV1OfferingIdPathParams,
  GetApiV1OfferingId400,
  GetApiV1OfferingId500,
} from '../types/GetApiV1OfferingId.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'

function getGetApiV1OfferingIdUrl(id: GetApiV1OfferingIdPathParams['id']) {
  const res = { method: 'GET', url: `/tdsc/api/v1/offering/${id}` as const }
  return res
}

/**
 * @description 根据 Offering ID，从 MinIO 获取文件并以流的形式返回，可分块传输。
 * @summary 下载指定 ID 的 Offering 文件
 * {@link /api/v1/offering/:id}
 */
export async function getApiV1OfferingId(id: GetApiV1OfferingIdPathParams['id'], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<GetApiV1OfferingIdQueryResponse, ResponseErrorConfig<GetApiV1OfferingId400 | GetApiV1OfferingId500>, unknown>({
    method: 'GET',
    url: getGetApiV1OfferingIdUrl(id).url.toString(),
    ...requestConfig,
  })
  return res.data
}