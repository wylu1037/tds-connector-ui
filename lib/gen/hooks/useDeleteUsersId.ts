/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { DeleteUsersIdMutationResponse, DeleteUsersIdPathParams, DeleteUsersId400, DeleteUsersId404, DeleteUsersId500 } from '../types/DeleteUsersId.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { deleteUsersId } from '../clients/deleteUsersId.ts'
import { useMutation } from '@tanstack/react-query'

export const deleteUsersIdMutationKey = () => [{ url: '/users/:id' }] as const

export type DeleteUsersIdMutationKey = ReturnType<typeof deleteUsersIdMutationKey>

/**
 * @description 根据用户ID删除用户
 * @summary 删除用户
 * {@link /users/:id}
 */
export function useDeleteUsersId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteUsersIdMutationResponse,
      ResponseErrorConfig<DeleteUsersId400 | DeleteUsersId404 | DeleteUsersId500>,
      { id: DeleteUsersIdPathParams['id'] },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteUsersIdMutationKey()

  return useMutation<
    DeleteUsersIdMutationResponse,
    ResponseErrorConfig<DeleteUsersId400 | DeleteUsersId404 | DeleteUsersId500>,
    { id: DeleteUsersIdPathParams['id'] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return deleteUsersId(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}