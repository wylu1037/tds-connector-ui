/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type {
  PostApiV1OfferingMutationRequest,
  PostApiV1OfferingMutationResponse,
  PostApiV1Offering400,
  PostApiV1Offering500,
} from '../types/PostApiV1Offering.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { postApiV1Offering } from '../clients/postApiV1Offering.ts'
import { useMutation } from '@tanstack/react-query'

export const postApiV1OfferingMutationKey = () => [{ url: '/api/v1/offering' }] as const

export type PostApiV1OfferingMutationKey = ReturnType<typeof postApiV1OfferingMutationKey>

/**
 * @description 创建一个新的 Offering 并上传文件到 MinIO
 * @summary 创建 Offering（上传文件）
 * {@link /api/v1/offering}
 */
export function usePostApiV1Offering<TContext>(
  options: {
    mutation?: UseMutationOptions<
      PostApiV1OfferingMutationResponse,
      ResponseErrorConfig<PostApiV1Offering400 | PostApiV1Offering500>,
      { data: PostApiV1OfferingMutationRequest },
      TContext
    > & { client?: QueryClient }
    client?: Partial<RequestConfig<PostApiV1OfferingMutationRequest>> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? postApiV1OfferingMutationKey()

  return useMutation<
    PostApiV1OfferingMutationResponse,
    ResponseErrorConfig<PostApiV1Offering400 | PostApiV1Offering500>,
    { data: PostApiV1OfferingMutationRequest },
    TContext
  >(
    {
      mutationFn: async ({ data }) => {
        return postApiV1Offering(data, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}