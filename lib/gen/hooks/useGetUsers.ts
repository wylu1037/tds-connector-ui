/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@kubb/plugin-client/clients/axios'
import type { GetUsersQueryResponse, GetUsersQueryParams, GetUsers400, GetUsers500 } from '../types/GetUsers.ts'
import type { RequestConfig, ResponseErrorConfig } from '@kubb/plugin-client/clients/axios'
import type { QueryKey, QueryClient, QueryObserverOptions, UseQueryResult } from '@tanstack/react-query'
import { getUsers } from '../clients/getUsers.ts'
import { queryOptions, useQuery } from '@tanstack/react-query'

export const getUsersQueryKey = (params?: GetUsersQueryParams) => [{ url: '/users' }, ...(params ? [params] : [])] as const

export type GetUsersQueryKey = ReturnType<typeof getUsersQueryKey>

export function getUsersQueryOptions(params?: GetUsersQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const queryKey = getUsersQueryKey(params)
  return queryOptions<GetUsersQueryResponse, ResponseErrorConfig<GetUsers400 | GetUsers500>, GetUsersQueryResponse, typeof queryKey>({
    queryKey,
    queryFn: async ({ signal }) => {
      config.signal = signal
      return getUsers(params, config)
    },
  })
}

/**
 * @description 分页获取用户列表，支持按名称搜索
 * @summary 获取用户列表
 * {@link /users}
 */
export function useGetUsers<TData = GetUsersQueryResponse, TQueryData = GetUsersQueryResponse, TQueryKey extends QueryKey = GetUsersQueryKey>(
  params?: GetUsersQueryParams,
  options: {
    query?: Partial<QueryObserverOptions<GetUsersQueryResponse, ResponseErrorConfig<GetUsers400 | GetUsers500>, TData, TQueryData, TQueryKey>> & {
      client?: QueryClient
    }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { query: queryConfig = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...queryOptions } = queryConfig
  const queryKey = queryOptions?.queryKey ?? getUsersQueryKey(params)

  const query = useQuery(
    {
      ...getUsersQueryOptions(params, config),
      queryKey,
      ...queryOptions,
    } as unknown as QueryObserverOptions,
    queryClient,
  ) as UseQueryResult<TData, ResponseErrorConfig<GetUsers400 | GetUsers500>> & { queryKey: TQueryKey }

  query.queryKey = queryKey as TQueryKey

  return query
}